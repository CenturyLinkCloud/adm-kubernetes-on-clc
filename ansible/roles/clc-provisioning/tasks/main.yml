---
# tasks file for clc-provisioning

- name: Create a CenturyLink Cloud group {{ clc_cluster_name }}.{{ server_group }} for the servers
  clc_group:
    name: "{{ clc_cluster_name }}.{{ server_group }}"
    parent: "{{ clc_cluster_name }}"
    location: "{{ datacenter }}"
    state: present

- name: Do something regarding the network for the servers
  debug: msg="TODO, for now, we'll use defaults"

- name: Prepare local certificate store
  file: path={{ server_cert_store }} state=directory mode=0755

- name: Prepare local certificate file
  stat: path="{{ server_cert_store }}/id_rsa"
  register: sshkeyfile

- name: Establish local ssh key
  command: ssh-keygen -N '' -f {{ server_cert_store }}/id_rsa
  when: sshkeyfile.stat.exists == False

- name: Create CLC servers in group {{ clc_cluster_name }}.{{ server_group }}, server count is {{ server_count }}
  clc_server:
    name: "k8s{{ server_group }}"
    location: "{{ datacenter }}"
    template: "{{ server_vm_template }}"
    os_type:  "{{ server_physical_os }}"
    exact_count: "{{ server_count }}"
    count_group: "{{ clc_cluster_name }}.{{ server_group }}"
    group: "{{ clc_cluster_name }}.{{ server_group }}"
    cpu: "{{ server_cpu }}"
    memory: "{{ server_memory }}"
    type: "{{ server_type }}"
    storage_type: "{{ server_storage }}"
    configuration_id: "{{ server_config_id }}"
  register: clc_servers
  async: "{{ async_time }}"
  poll: "{{ async_poll }}"
#- debug: var=clc_servers

- name: Deploy ssh keys to servers
  clc_blueprint_package:
    server_ids: "{{ item.name }}"
    package_id: "{{ ssh_key_package_id }}"
    package_params:
      User: "root"
      SshKey: "{{ lookup('file', '{{ server_cert_store }}/id_rsa.pub') }}"
  with_flattened:
    - clc_servers.servers
  async: 300
  poll: 5

- name: Make sure hosts directory exists
  file:
    name: "{{ ansible_hosts_directory }}"
    state: directory

- name: Write hosts file
  template: src="hosts.j2" dest="{{ ansible_hosts_directory }}/hosts-{{ clc_cluster_name }}-{{ server_group }}"
